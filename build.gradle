buildscript {
	ext {
		kotlinVersion = '1.2.70'
		springBootVersion = '2.1.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

// PLUGINS
/*
  The kotlin-spring plugin automatically opens classes and methods (unlike in Java,
  the default qualifier is "final" in Kotlin), annotated or meta-annotated
  with Spring annotations.

  This is useful to be able to create @Configuration or @Transactional beans
  without having to add the "open" qualifier required by CGLIB proxies
  for example
*/
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// COMPILER OPTIONS
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


// DEPENDENCIES
// Includes 3 Kotlin specific libraries required for Spring Boot web app
dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mustache')
	compile('org.springframework.boot:spring-boot-starter-web')

	// 3. Add support for serialization/deserialization of Kotlin classes
	// and data classes (single constructor classes can be used automatically)
	// and those with secondary constructors or static factories
	// are also supported
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')

    // 1. The Java 8 variant of Kotlin Standard Library
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // 2. Kotlin reflection library (mandatory as of Spring Framework 5)
	compile("org.jetbrains.kotlin:kotlin-reflect")
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
